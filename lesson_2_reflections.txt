What happens when you initialize a repository? Why do you need to do it?
    A .git hidden directory gets created, and that initializes the directory as a git repository.
    Otherwise, git wouldn't recognize the directory as a git repo.
How is the staging area different from the working directory and the repository? What value do you 
think it offers?
    A staging area is a middle ground between the working directory that can change at any time and
    the repository, which is separated into commits (not actually, just my way of thinking about
    it). It allows commits to bundle more than one file into one single commit.
How can you use the staging area to make sure you have one commit per logical change?
    You can use git diff --staged to make sure this is only one logical difference between the
    staged commit and the most recent commit.
What are some situations when branches would be helpful in keeping your history organized? How 
would branches help?
    Branches help keep experimental features or big changes separate from the main product so that
    you can still experiment while maintaining the actual product.
How do the diagrams help you visualize the branch structure?
    They help me realize which branches are and are not reachable.
What is the result of merging two branches together? Why do we represent it in the diagram the way 
we do?
    The content of the two branches are combined. The branches separate and develop separately for
    a while, and then combine through merging.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
    Git can take care of a lot of work automatically, but it might merge somethings weirdly because 
    it isn't the smartest.